@ECHO OFF
SETLOCAL enabledelayedexpansion


@REM :: insert your files here
SET "MDD_FILE=..\tests\working\current\R2401582.mdd"

@REM :: the path where outout files are saved
@REM :: "." means the same directory as this script
@REM :: empty path ("") means the same directory as your MDD
@REM :: temporary files are still created at the location of your MDD (it all is configured within this BAT file - adjust if you need)
@REM :: but temp files are deleted at the end of script (if you have CLEAN_TEMP_MIDDLE_FILES==1==1)

REM SET "OUT_PATH=."
SET "OUT_PATH="




@REM :: adjust config options per your needs
@REM :: when using "if" in BAT files, "1==1" is true and "1==0" is false

@REM :: list some examples of categories that you stack on
SET "CONFIG_PREFER_CATEGORIES=Disney,Mailchimp,Nike"





@REM :: do you need an html file with fields from MDD? It is quite useful
@REM :: set to "1==1" (which means true in bat files) to have this file generated
SET "CONFIG_PRODUCE_HTML_MDD=1==1"


@REM :: set to "1==1" if you don't need unnecessary files generated by the script - steps taken when produucing final files
@REM :: or, set to "1==0" to have these files stored for debugging
SET "CLEAN_TEMP_MIDDLE_FILES=1==1"






@REM :: go
IF "%CONFIG_PREFER_CATEGORIES%"=="" (
    REM ECHO
) ELSE (
    SET "CONFIG_PREFER_CATEGORIES=--config-priority-categories !CONFIG_PREFER_CATEGORIES!"
)

REM :: file names with file schemes in json
FOR %%F in ("%MDD_FILE%") DO SET "MDD_FILE_LAST_NAME=%%~nxF"
IF "%OUT_PATH%"=="" (
    SET "OUT_PATH_AND_NAME=%MDD_FILE%"
) ELSE (
    SET "OUT_PATH_AND_NAME=%OUT_PATH%\%MDD_FILE_LAST_NAME%"
)
SET "MDD_FILE_SCHEME=%MDD_FILE%.json"

SET "MDD_FILE_VARIABLES=%MDD_FILE%-stack-var-list-suggested.json"

SET "MDD_FILE_PATCH_STEP401=%MDD_FILE%-patch-401.json"
SET "MDD_FILE_PATCH_STEP402=%MDD_FILE%-patch-402.json"

SET "MDD_FILE_TEMP_STEP401=%MDD_FILE%_401_temp.dms"
SET "MDD_FILE_TEMP_STEP402=%MDD_FILE%_402_temp.dms"

SET "MDD_FILE_RESULT_STEP401=%OUT_PATH_AND_NAME%_401_STKPrep.dms"
SET "MDD_FILE_RESULT_STEP402=%OUT_PATH_AND_NAME%_402_STKCreate.dms"

ECHO -
ECHO 1. read MDD
ECHO read from: %MDD_FILE%
ECHO write to: .json
python dist/mdmautostktoolsap_bundle.py --program read_mdd --mdd "%MDD_FILE%" --config-features label,attributes,properties,scripting --config-section fields --config-contexts Analysis,Question
if %ERRORLEVEL% NEQ 0 ( echo ERROR: Failure && pause && goto CLEANUP && exit /b %errorlevel% )

IF %CONFIG_PRODUCE_HTML_MDD% (
    ECHO -
    ECHO 1.1. generate html
    python dist/mdmautostktoolsap_bundle.py --program report --inpfile "%MDD_FILE_SCHEME%"
    if %ERRORLEVEL% NEQ 0 ( echo ERROR: Failure && pause && goto CLEANUP && exit /b %errorlevel% )
)

ECHO -
ECHO 2. decide on which questions and loops should be stacked
python dist/mdmautostktoolsap_bundle.py --program mdd-autostacking-pick-variables --inp-mdd-scheme "%MDD_FILE_SCHEME%" %CONFIG_PREFER_CATEGORIES% --output-filename "%MDD_FILE_VARIABLES%"
if %ERRORLEVEL% NEQ 0 ( echo ERROR: Failure && pause && goto CLEANUP && exit /b %errorlevel% )

ECHO -
ECHO 3. generate patch file
python dist/mdmautostktoolsap_bundle.py --program mdd-autostacking-prepare-patch --inp-mdd-scheme "%MDD_FILE_SCHEME%" --var-list "%MDD_FILE_VARIABLES%" --output-patch-401 "%MDD_FILE_PATCH_STEP401%" --output-patch-402 "%MDD_FILE_PATCH_STEP402%"
if %ERRORLEVEL% NEQ 0 ( echo ERROR: Failure && pause && goto CLEANUP && exit /b %errorlevel% )

ECHO -
ECHO 4. temporary files with base templates
python dist/mdmautostktoolsap_bundle.py --program mdd-autostk-text-utility --action template-401 --output-filename "%MDD_FILE_TEMP_STEP401%"
if %ERRORLEVEL% NEQ 0 ( echo ERROR: Failure && pause && goto CLEANUP && exit /b %errorlevel% )
python dist/mdmautostktoolsap_bundle.py --program mdd-autostk-text-utility --action template-402 --output-filename "%MDD_FILE_TEMP_STEP402%"
if %ERRORLEVEL% NEQ 0 ( echo ERROR: Failure && pause && goto CLEANUP && exit /b %errorlevel% )

ECHO -
ECHO 5. patch templates and save as final files

ECHO -
ECHO 5.401 - 401_PreStack.dms script

python dist/mdmautostktoolsap_bundle.py --program mdd-patch --inp-filename "%MDD_FILE_TEMP_STEP401%" --inp-type dms --patch "%MDD_FILE_PATCH_STEP401%" --output-filename "%MDD_FILE_RESULT_STEP401%"
if %ERRORLEVEL% NEQ 0 ( echo ERROR: Failure && pause && goto CLEANUP && exit /b %errorlevel% )

ECHO -
ECHO 5.402 - 402_Stack.dms script

python dist/mdmautostktoolsap_bundle.py --program mdd-patch --inp-filename "%MDD_FILE_TEMP_STEP402%" --inp-type dms --patch "%MDD_FILE_PATCH_STEP402%" --output-filename "%MDD_FILE_RESULT_STEP402%"
if %ERRORLEVEL% NEQ 0 ( echo ERROR: Failure && pause && goto CLEANUP && exit /b %errorlevel% )




ECHO -
ECHO 7 del .json temporary files

IF %CLEAN_TEMP_MIDDLE_FILES% (
    DEL "%MDD_FILE_SCHEME%"
    DEL "%MDD_FILE_VARIABLES%"
    DEL "%MDD_FILE_PATCH_STEP401%"
    DEL "%MDD_FILE_PATCH_STEP402%"
    DEL "%MDD_FILE_TEMP_STEP401%"
    DEL "%MDD_FILE_TEMP_STEP402%"
)

ECHO -
:CLEANUP
ECHO 999. Clean up
REM REM :: comment: just deleting trach .pyc files after the execution - they are saved when modules are loaded from within bndle file created with pinliner
REM REM :: however, it is necessary to delete these .pyc files before every call of the mdmautostktoolsap_bundle
REM REM :: it means, 6 more times here, in this script; but I don't do it cause I have this added to the linliner code - see my pinliner fork
DEL *.pyc
IF EXIST __pycache__ (
DEL /F /Q __pycache__\*
)
IF EXIST __pycache__ (
RMDIR /Q /S __pycache__
)

ECHO done!
exit /b %errorlevel%

